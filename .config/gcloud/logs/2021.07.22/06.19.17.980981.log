2021-07-22 06:19:17,981 DEBUG    root            Loaded Command Group: ['gcloud', 'topic']
2021-07-22 06:19:17,986 DEBUG    root            Loaded Command Group: ['gcloud', 'topic', 'formats']
2021-07-22 06:19:17,987 DEBUG    root            Running [gcloud.topic.formats] with arguments: []
2021-07-22 06:19:17,988 DEBUG    root            Running [gcloud.topic.formats] with arguments: [--document: "None"]
2021-07-22 06:19:17,989 DEBUG    root            No implementation for release track [ALPHA] for element: [/usr/lib/google-cloud-sdk/lib/surface/topic]
2021-07-22 06:19:17,990 DEBUG    root            No implementation for release track [BETA] for element: [/usr/lib/google-cloud-sdk/lib/surface/topic]
2021-07-22 06:19:17,992 DEBUG    root            Loaded Command Group: ['gcloud', 'topic', 'filters']
2021-07-22 06:19:17,994 DEBUG    root            Loaded Command Group: ['gcloud', 'topic', 'resource_keys']
2021-07-22 06:19:17,997 DEBUG    root            Loaded Command Group: ['gcloud', 'topic', 'projections']
2021-07-22 06:19:18,015 DEBUG    root            Loaded Command Group: ['gcloud', 'compute']
2021-07-22 06:19:18,018 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'instances']
2021-07-22 06:19:18,026 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'instances', 'list']
2021-07-22 06:19:18,028 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'regions']
2021-07-22 06:19:18,033 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'regions', 'describe']
2021-07-22 06:19:18,036 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'project_info']
2021-07-22 06:19:18,039 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'project-info', 'describe']
2021-07-22 06:19:18,042 DEBUG    root            Loaded Command Group: ['gcloud', 'info']
2021-07-22 06:19:18,043 DEBUG    root            Loaded Command Group: ['gcloud', 'alpha', 'genomics']
2021-07-22 06:19:18,046 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'zones']
2021-07-22 06:19:18,047 DEBUG    root            Loaded Command Group: ['gcloud', 'compute', 'zones', 'list']
2021-07-22 06:19:18,048 DEBUG    root            Loaded Command Group: ['gcloud', 'iam']
2021-07-22 06:19:18,051 DEBUG    root            Loaded Command Group: ['gcloud', 'iam', 'service_accounts']
2021-07-22 06:19:18,055 DEBUG    root            Loaded Command Group: ['gcloud', 'iam', 'service-accounts', 'keys']
2021-07-22 06:19:18,061 DEBUG    root            Loaded Command Group: ['gcloud', 'iam', 'service-accounts', 'keys', 'list']
2021-07-22 06:19:18,077 INFO     ___FILE_ONLY___ [m[1mNAME[m
    gcloud topic formats - resource formats supplementary help

[m[1mDESCRIPTION[m
    Most [1mgcloud[m commands return a list of resources on success. By default they
    are pretty-printed on the standard output. The
    [1m--format=[m[4mNAME[m[[4mATTRIBUTES[m][1m([m[4mPROJECTION[m[1m)[m and [1m--filter=[m[4mEXPRESSION[m flags along
    with projections can be used to format and change the default output to a
    more meaningful result.

    Use the [1m--format[m flag to change the default output format of a command.
    Resource formats are described in detail below.

    Use the [1m--filter[m flag to select resources to be listed. For details run $
    gcloud topic filters.

    Use resource-keys to reach resource items through a unique path of names
    from the root. For details run $ gcloud topic resource-keys.

    Use projections to list a subset of resource keys in a resource. For
    details run $ gcloud topic projections.

    Note: To refer to a list of fields you can sort, filter, and format by for
    each resource, you can run a list command with the format set to [1mtext[m or
    [1mjson[m. For example, $ gcloud compute instances list --limit=1 --format=text.

    To work through an interactive tutorial about using the filter and format
    flags instead, see:
    https://console.cloud.google.com/cloudshell/open?git_repo=https://github.com/GoogleCloudPlatform/cloud-shell-tutorials&page=editor&tutorial=cloudsdk/tutorial.md

[m  [1mFormats[m
    A format expression is used to change the default output format of a
    command. Many output formats are available; some for pretty printing
    human-readable output and others for returning machine-readable output.

    A format expression has 3 parts:

     [4mNAME[m
        [4mname[m
     [4mATTRIBUTES[m
        [1m[[m [no-][4mattribute-name[m[=[4mvalue[m] [, ... ] [1m][m
     [4mPROJECTION[m
        [1m([m [4mresource-key[m [, ...] [1m)[m

    [4mNAME[m is required, [4mATTRIBUTES[m are optional, and [4mPROJECTIONS[m may be required
    for some formats. Unknown attribute names are silently ignored.

    Each [1mgcloud[m [1mlist[m command has a default format expression. The [1m--format[m flag
    can alter or replace the default. For example,

        --format="[box]"

    adds box decorations to a default table, and

        --format=json

    lists the resource in [1mjson[m format.

    The formats and format specific attributes are:

     [1mconfig[m
        A dictionary of dictionaries in config style.

        The format attributes are:

         [1mexport[m
            Display the dictionary as a list of system specific environment
            export commands.
         [1munset[m
            Display the dictionary as a list of system specific environment
            unset commands.

     [1mcsv[m
        Comma Separated Values (http://www.ietf.org/rfc/rfc4180.txt) with no
        keys. This format requires a projection to define the values to be
        printed.

        To use [1m\n[m or [1m\t[m as an attribute value please escape the [1m\[m with your
        shell's escape sequence, example [1mseparator="\\n"[m for bash.

        The format attributes are:

         [1mdelimiter="string"[m
            The string printed between list value items, default ";".
         [1mno-heading[m
            Disables the initial key name heading record.
         [1mseparator="string"[m
            The string printed between values, default ",".
         [1mterminator="string"[m
            The string printed after each record, default "\n" (newline).

     [1mdefault[m
        An alias for the [1myaml[m format.

     [1mdiff[m
        A unified diff of the first two projection columns.

        The format attributes are:

         [1mformat[m
            The format of the diffed resources. Each resource is converted to
            this format and the diff of the converted resources is displayed.
            The default is 'flattened'.

     [1mdisable[m
        Disables formatted output and does not consume the resources.

     [1mflattened[m
        A flattened tree. Each output line contains one [1mkey[m:[1mvalue[m pair.

        The format attributes are:

         [1mno-pad[m
            Don't print space after the separator. The default adjusts the
            space to align the values into the same output column. Use [1mno-pad[m
            for comparing resource outputs.
         [1mseparator=[1;4mSEPARATOR[1m[m
            Print [4mSEPARATOR[m between the [1mkey[m and [1mvalue[m. The default is ": ".

     [1mget[m
        Equivalent to the [1mvalue[no-transforms][m format. Default transforms are
        not applied to the displayed values.

     [1mjson[m
        JSON (http://www.json.org), JavaScript Object Notation.

        The format attributes are:

         [1mno-undefined[m
            Does not display resource data items with null values.

     [1mlist[m
        An ordered list of items.

        The format attributes are:

         [1malways-display-title[m
            Display the title even if there are no records.
         [1mcompact[m
            Display all items in a record on one line.

     [1mmulti[m
        Each projection key must have a subformat defined by the
        :format=FORMAT-STRING attribute. For example,

            `--format="multi(data:format=json, info:format='table[box](a, b, c)')"`

        formats the [1mdata[m field as JSON and the [1minfo[m field as a boxed table.

        The format attributes are:

         [1mseparator[m
            Separator string to print between each format. If multiple
            resources are provided, the separator is also printed between each
            resource.

     [1mnone[m
        Disables formatted output and consumes the resources.

     [1mobject[m
        Bypasses JSON-serialization and prints the object representation of
        each resource.

        The format attributes are:

         [1mseparator[m
            The line printed between resources.
         [1mterminator[m
            The line printed after each resource.

     [1mtable[m
        Aligned left-adjusted columns with optional title, column headings and
        sorting. This format requires a projection to define the table columns.
        The default column headings are the disambiguated right hand components
        of the column keys in ANGRY_SNAKE_CASE. For example, the projection
        keys (first.name, last.name) produce the default column heading
        ('NAME', 'LAST_NAME').

        If [1m--page-size[m=[4mN[m is specified then output is grouped into tables with
        at most [4mN[m rows. Headings, alignment and sorting are done per-page. The
        title, if any, is printed before the first table.

        The format attributes are:

         [1mall-box[m
            Prints a box around the entire table and each cell, including the
            title if any.
         [1mbox[m
            Prints a box around the entire table and the title cells if any.
         [1mformat=[1;4mFORMAT-STRING[1m[m
            Prints the key data indented by 4 spaces using [4mFORMAT-STRING[m which
            can reference any of the supported formats.
         [1mno-heading[m
            Disables the column headings.
         [1mmargin=N[m
            Right hand side padding when one or more columns are wrapped.
         [1mpad=N[m
            Sets the column horizontal pad to [4mN[m spaces. The default is 1 for
            box, 2 otherwise.
         [1mtitle=[1;4mTITLE[1m[m
            Prints a centered [4mTITLE[m at the top of the table, within the table
            box if [1mbox[m is enabled.

     [1mtext[m
        An alias for the [1mflattened[m format.

     [1mvalue[m
        CSV with no heading and <TAB> separator instead of <COMMA>. Used to
        retrieve individual resource values. This format requires a projection
        to define the value(s) to be printed.

        To use [1m\n[m or [1m\t[m as an attribute value please escape the [1m\[m with your
        shell's escape sequence, example [1mseparator="\\n"[m for bash.

        The format attributes are:

         [1mdelimiter="string"[m
            The string printed between list value items, default ";".
         [1mquote[m
            "..." quote values that contain delimiter, separator or terminator
            strings.
         [1mseparator="string"[m
            The string printed between values, default "\t" (tab).
         [1mterminator="string"[m
            The string printed after each record, default "\n" (newline).

     [1myaml[m
        YAML (http://www.yaml.org), YAML ain't markup language.

        The format attributes are:

         [1mnull="string"[m
            Display string instead of [1mnull[m for null/None values.
         [1mno-undefined[m
            Does not display resource data items with null values.
         [1mversion=VERSION[m
            Prints using the specified YAML version, default 1.2.

    All formats have these attributes:

     [1mdisable[m
        Disables formatted output and does not consume the resources.
     [1mjson-decode[m
        Decodes string values that are JSON compact encodings of list and
        dictionary objects. This may become the default.
     [1mpager[m
        If True, sends output to a pager.
     [1mprivate[m
        Disables log file output. Use this for sensitive resource data that
        should not be displayed in log files. Explicit command line IO
        redirection overrides this attribute.
     [1mtransforms[m
        Apply projection transforms to the resource values. The default is
        format specific. Use [1mno-transforms[m to disable.

[m[1mEXAMPLES[m
    List a table of compute instance resources sorted by [1mname[m with box
    decorations and title [1mInstances[m:

        $ gcloud compute instances list \
            --format="table[box,title=Instances](name:sort=1,\
         zone:label=zone, status)"

    List a nested table of the quotas of a region:

        $ gcloud compute regions describe us-central1 \
            --format="table(quotas:format='table(metric,limit,usage)')"

    Print a flattened list of global quotas in CSV format:

        $ gcloud compute project-info describe --flatten="quotas[]" \
            --format="csv(quotas.metric,quotas.limit,quotas.usage)"

    List the disk interfaces for all compute instances as a compact comma
    separated list:

        $ gcloud compute instances list \
            --format="value(disks[].interface.list())"

    List the URIs for all compute instances:

        $ gcloud compute instances list --format="value(uri())"

    List all compute instances with their creation timestamps displayed
    according to the local timezone:

        $ gcloud compute instances list \
            --format="table(name,creationTimestamp.date(tz=LOCAL))"

    List the project authenticated user email address:

        $ gcloud info --format="value(config.account)"

    List resources filtered on repeated fields by projecting subfields on a
    repeated message:

        $ gcloud alpha genomics readgroupsets list \
            --format="default(readGroups[].name)"

    Return the scope of the current instance:

        $ gcloud compute zones list --format="value(selfLink.scope())"

    selfLink is a fully qualified name. (e.g.
    'https://www.googleapis.com/compute/v1/projects/my-project/zones/us-central1-a')
    The previous example returns a list of just the names of each zone (e.g.
    'us-central1-a'). This is because selfLink.scope() grabs the last part of
    the URL segment. To extract selfLink starting from /projects and return the
    scope of the current instance:

        $ gcloud compute zones list \
            --format="value(selfLink.scope(projects))"

    List all scopes enabled for a Compute Engine instance and flatten the
    multi-valued resource:

        $ gcloud compute instances list \
            --format="flattened(name,serviceAccounts[].email,serviceAccounts\
        [].scopes[].basename())"

    Display a multi-valued resource's service account keys with the
    corresponding service account, extracting just the first '/' delimited part
    with segment(0):

        $ gcloud iam service-accounts keys list \
            --iam-account=svc-2-123@test-minutia-123.iam.gserviceaccount.com\
         --project=test-minutia-123 \
            --format="table(name.scope(serviceAccounts).segment(0):label='se\
        rvice Account',name.scope(keys):label='keyID',validAfterTime)"

    The last example returns a table with service account names without their
    full paths, keyID and validity.
[m
